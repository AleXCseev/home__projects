{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"C:/Users/User/Desktop/home__projects/top-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"C:/Users/User/Desktop/home__projects/top-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\home__projects\\\\top-app\\\\components\\\\Card\\\\Card.tsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport styles from \"./Card.module.css\";\nimport cn from \"classnames\";\nexport var Card = function Card(_ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \"white\" : _ref$color,\n      children = _ref.children,\n      className = _ref.className,\n      props = _objectWithoutProperties(_ref, [\"color\", \"children\", \"className\"]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({\n    className: cn(styles.card, className, _defineProperty({}, styles.blue, color == \"blue\"))\n  }, props), {}, {\n    children: children\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, _this);\n};\n_c = Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["C:/Users/User/Desktop/home__projects/top-app/components/Card/Card.tsx"],"names":["styles","cn","Card","color","children","className","props","card","blue"],"mappings":";;;;;;;;;;;AACA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,EAAP,MAAe,YAAf;AAEA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAgF;AAAA,wBAA7EC,KAA6E;AAAA,MAA7EA,KAA6E,2BAArE,OAAqE;AAAA,MAA5DC,QAA4D,QAA5DA,QAA4D;AAAA,MAAlDC,SAAkD,QAAlDA,SAAkD;AAAA,MAApCC,KAAoC;;AACnG,sBACC;AAAK,IAAA,SAAS,EAAEL,EAAE,CAACD,MAAM,CAACO,IAAR,EAAcF,SAAd,sBAChBL,MAAM,CAACQ,IADS,EACFL,KAAK,IAAI,MADP;AAAlB,KAGKG,KAHL;AAAA,cAKEF;AALF;AAAA;AAAA;AAAA;AAAA,WADD;AASA,CAVM;KAAMF,I","sourcesContent":["import { CardProps } from \"./Card.props\";\r\nimport styles from \"./Card.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nexport const Card = ({ color = \"white\", children, className, ...props }: CardProps): JSX.Element => {\r\n\treturn (\r\n\t\t<div className={cn(styles.card, className, {\r\n\t\t\t[styles.blue]: color == \"blue\"\r\n\t\t})}\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}