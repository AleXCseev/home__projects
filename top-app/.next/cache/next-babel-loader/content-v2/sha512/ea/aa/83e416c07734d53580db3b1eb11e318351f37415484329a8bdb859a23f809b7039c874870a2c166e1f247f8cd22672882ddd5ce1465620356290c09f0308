{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\home__projects\\\\top-app\\\\pages\\\\[type]\\\\[alias].tsx\";\nimport React from \"react\";\nimport { withLayout } from \"../../layout/Layout\";\nimport { TopPageComponent } from \"../../page-components\";\nvar firstCategory = 0;\n\nfunction TopPage(_ref) {\n  var firstCategory = _ref.firstCategory,\n      page = _ref.page,\n      products = _ref.products;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TopPageComponent, {\n      firstCategory: firstCategory,\n      page: page,\n      products: products\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n\n_c = TopPage;\nexport var __N_SSG = true;\nexport default _c2 = withLayout(TopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TopPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/User/Desktop/home__projects/top-app/pages/[type]/[alias].tsx"],"names":["React","withLayout","TopPageComponent","firstCategory","TopPage","page","products"],"mappings":";;;AACA,OAAOA,KAAP,MAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AAOA,SAASC,gBAAT,QAAiC,uBAAjC;AAEA,IAAMC,aAAa,GAAG,CAAtB;;AAEA,SAASC,OAAT,OAA4E;AAAA,MAAzDD,aAAyD,QAAzDA,aAAyD;AAAA,MAA1CE,IAA0C,QAA1CA,IAA0C;AAAA,MAApCC,QAAoC,QAApCA,QAAoC;AAC3E,sBACC;AAAA,2BACC,QAAC,gBAAD;AACC,MAAA,aAAa,EAAEH,aADhB;AAEC,MAAA,IAAI,EAAEE,IAFP;AAGC,MAAA,QAAQ,EAAEC;AAHX;AAAA;AAAA;AAAA;AAAA;AADD,mBADD;AASA;;KAVQF,O;;AAYT,qBAAeH,UAAU,CAACG,OAAD,CAAzB","sourcesContent":["import { GetStaticPaths, GetStaticPathsContext, GetStaticProps, GetStaticPropsContext } from \"next\";\r\nimport React, { useState } from \"react\";\r\nimport { withLayout } from \"../../layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { MenuItem } from \"../../interfaces/menu.inteface\";\r\nimport { TopLevelCategory, TopPageModel } from \"../../interfaces/toppage.interface\";\r\nimport { ParsedUrlQuery } from \"querystring\";\r\nimport { ProductModel } from \"../../interfaces/product.interface\";\r\nimport { firstLevelMenu } from \"../../helpers/helpers\";\r\nimport { TopPageComponent } from \"../../page-components\";\r\n\r\nconst firstCategory = 0;\r\n\r\nfunction TopPage({ firstCategory, page, products }: PageProps): JSX.Element {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<TopPageComponent \r\n\t\t\t\tfirstCategory={firstCategory}\r\n\t\t\t\tpage={page}\r\n\t\t\t\tproducts={products}\r\n\t\t\t></TopPageComponent>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default withLayout(TopPage);\r\n\r\nexport const getStaticPaths: GetStaticPaths = async () => {\r\n\r\n\tlet paths: string[] = [];\r\n\r\n\tfor( const m of firstLevelMenu ) {\r\n\t\tconst { data: menu } = await axios.post<MenuItem[]>(\r\n\t\t\tprocess.env.NEXT_PUBLIC_DOMAIN + \"/api/top-page/find\",\r\n\t\t\t{\r\n\t\t\t\tfirstCategory: m.id\r\n\t\t\t},\r\n\t\t);\r\n\t\tpaths = paths.concat(menu.flatMap(s => s.pages.map(p => `/${m.route}/${p.alias}`)))\r\n\t}\r\n\treturn {\r\n\t\tpaths,\r\n\t\tfallback: true,\r\n\t}\r\n}\r\n\r\nexport const getStaticProps: GetStaticProps<PageProps> = async ({ params }: GetStaticPropsContext<ParsedUrlQuery>) => {\r\n\tif ( !params ) {\r\n\t\treturn {\r\n\t\t\tnotFound: true\r\n\t\t};\r\n\t}\r\n\r\n\r\n\tconst firstCategoryItem = firstLevelMenu.find(m => m.route == params.type);\r\n\tif ( !firstCategoryItem ) {\r\n\t\treturn {\r\n\t\t\tnotFound: true\r\n\t\t};\r\n\t}\r\n\r\n\ttry {\r\n\t\tconst { data: menu } = await axios.post<MenuItem[]>(\r\n\t\t\tprocess.env.NEXT_PUBLIC_DOMAIN + \"/api/top-page/find\",\r\n\t\t\t{\r\n\t\t\t\tfirstCategory: firstCategoryItem.id\r\n\t\t\t},\r\n\t\t);\r\n\r\n\t\tif( menu.length == 0 ) {\r\n\t\t\treturn {\r\n\t\t\t\tnotFound: true\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\tconst { data: page } = await axios.get<TopPageModel>(process.env.NEXT_PUBLIC_DOMAIN + \"/api/top-page/byAlias/\" + params.alias);\r\n\t\tconst { data: products } = await axios.post<ProductModel[]>(process.env.NEXT_PUBLIC_DOMAIN + \"/api/product/find\", {\r\n\t\t\tcategory: page.category,\r\n\t\t\tlimit: 10,\r\n\t\t});\r\n\t\treturn {\r\n\t\t\tprops: {\r\n\t\t\t\tmenu,\r\n\t\t\t\tfirstCategory: firstCategoryItem.id,\r\n\t\t\t\tpage,\r\n\t\t\t\tproducts,\r\n\t\t\t},\r\n\t\t};\r\n\t} catch(error) {\r\n\t\treturn {\r\n\t\t\tnotFound: true\r\n\t\t};\r\n\t}\r\n};\r\n\r\ninterface PageProps extends Record<string, unknown> {\r\n\tmenu: MenuItem[];\r\n\tfirstCategory: TopLevelCategory;\r\n\tpage: TopPageModel;\r\n\tproducts: ProductModel[];\r\n}\r\n"]},"metadata":{},"sourceType":"module"}