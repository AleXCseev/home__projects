{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nexport const Product = (_ref) => {\n  let {\n    product,\n    className\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"product\", \"className\"]);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/home__projects/top-app/components/Product/Product.tsx"],"names":["React","Product","product","className","props"],"mappings":";;;;;;;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AAKA,OAAO,MAAMC,OAAO,GAAG,UAAiE;AAAA,MAAhE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAgE;AAAA,MAAvCC,KAAuC;;AACvF,sBACC,qCADD;AAOA,CARM","sourcesContent":["import { ProductProps } from \"./Product.props\";\r\nimport styles from \"./Product.module.css\";\r\nimport cn from \"classnames\";\r\nimport React from \"react\";\r\nimport { Button, Card, Divider, Raiting, Tag } from \"..\";\r\nimport { declOfNum, priceRu } from \"../../helpers/helpers\";\r\nimport Image from \"next/image\";\r\n\r\nexport const Product = ({ product, className, ...props }: ProductProps): JSX.Element => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\r\n\t\t\r\n\t\t</>\r\n\t\t\r\n\t);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}