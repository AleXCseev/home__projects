{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { withLayout } from \"../../layout/Layout\";\n\nfunction Type(_ref) {\n  var firstCategory = _ref.firstCategory;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"Type: \", firstCategory]\n  }, void 0, true);\n}\n\n_c = Type;\nexport var __N_SSG = true;\nexport default _c2 = withLayout(Type);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Type\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/konstantinalekseev/Desktop/home__projects/top-app/pages/[type]/index.tsx"],"names":["withLayout","Type","firstCategory"],"mappings":";;AAEA,SAASA,UAAT,QAA2B,qBAA3B;;AAMA,SAASC,IAAT,OAA0D;AAAA,MAAzCC,aAAyC,QAAzCA,aAAyC;AACzD,sBACC;AAAA,yBACSA,aADT;AAAA,kBADD;AAKA;;KANQD,I;;AAQT,qBAAeD,UAAU,CAACC,IAAD,CAAzB","sourcesContent":["import { GetStaticPaths, GetStaticProps, GetStaticPropsContext } from \"next\";\nimport axios from \"axios\";\nimport { withLayout } from \"../../layout/Layout\";\nimport { MenuItem } from \"../../interfaces/menu.inteface\";\nimport { firstLevelMenu } from \"../../helpers/helpers\";\nimport { ParsedUrlQuery } from \"querystring\";\nimport { API } from \"../../helpers/api\";\n\nfunction Type( { firstCategory }:TypeProps ): JSX.Element {\n\treturn (\n\t\t<>\n\t\t\tType: { firstCategory }\n\t\t</>\n\t);\n}\n\nexport default withLayout(Type);\n\nexport const getStaticPaths: GetStaticPaths = async () => {\n\treturn {\n\t\tpaths: firstLevelMenu.map(m => '/' + m.route),\n\t\tfallback: true,\n\t}\n}\n\nexport const getStaticProps: GetStaticProps<TypeProps> = async ({ params }: GetStaticPropsContext<ParsedUrlQuery>) => {\n\tif(!params) {\n        return {\n            notFound: true\n        }\n    }\n\n    const firstCategoryItem = firstLevelMenu.find(m => m.route == params.type)\n    if(!firstCategoryItem) {\n        return {\n            notFound: true\n        }\n    }\n    \n    const { data: menu } = await axios.post<MenuItem[]>(\n\t\tAPI.topPage.find,\n\t\t{\n\t\t\tfirstCategory: firstCategoryItem.id\n\t\t},\n\t);\n\treturn {\n\t\tprops: {\n\t\t\tmenu,\n\t\t\tfirstCategory: firstCategoryItem.id\n\t\t},\n\t};\n};\n\ninterface TypeProps extends Record<string, unknown> {\n\tmenu: MenuItem[];\n\tfirstCategory: number;\n}\n"]},"metadata":{},"sourceType":"module"}