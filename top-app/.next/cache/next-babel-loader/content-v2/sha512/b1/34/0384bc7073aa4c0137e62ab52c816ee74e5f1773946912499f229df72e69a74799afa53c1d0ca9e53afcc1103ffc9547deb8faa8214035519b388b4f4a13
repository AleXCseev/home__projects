{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport React from \"react\";\nimport { withLayout } from \"../../layout/Layout\";\nimport axios from \"axios\";\nimport { firstLevelMenu } from \"../../helpers/helpers\";\nconst firstCategory = 0;\n\nfunction Course({\n  page,\n  products\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: products && products.length\n  }, void 0, false);\n}\n\nexport default withLayout(Course);\nexport const getStaticPaths = async () => {\n  let paths = [];\n\n  for (const m of firstLevelMenu) {\n    const {\n      data: menu\n    } = await axios.post(process.env.NEXT_PUBLIC_DOMAIN + \"/api/top-page/find\", {\n      firstCategory: m.id\n    });\n    paths = paths.concat(menu.flatMap(s => s.pages.map(p => `/${m.route}/${p.alias}`)));\n  }\n\n  return {\n    paths,\n    fallback: true\n  };\n};\nexport const getStaticProps = async ({\n  params\n}) => {\n  if (!params) {\n    return {\n      notFound: true\n    };\n  }\n\n  const firstCategoryItem = firstLevelMenu.find(m => m.route == params.type);\n\n  if (!firstCategoryItem) {\n    return {\n      notFound: true\n    };\n  }\n\n  try {} catch (error) {}\n};","map":{"version":3,"sources":["C:/Users/ccccc/Desktop/home__projects/top-app/pages/[type]/[alias].tsx"],"names":["React","withLayout","axios","firstLevelMenu","firstCategory","Course","page","products","length","getStaticPaths","paths","m","data","menu","post","process","env","NEXT_PUBLIC_DOMAIN","id","concat","flatMap","s","pages","map","p","route","alias","fallback","getStaticProps","params","notFound","firstCategoryItem","find","type","error"],"mappings":";;AACA,OAAOA,KAAP,MAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAKA,SAASC,cAAT,QAA+B,uBAA/B;AAEA,MAAMC,aAAa,GAAG,CAAtB;;AAEA,SAASC,MAAT,CAAgB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAhB,EAA8D;AAC7D,sBACC;AAAA,cACEA,QAAQ,IAAIA,QAAQ,CAACC;AADvB,mBADD;AAKA;;AAED,eAAeP,UAAU,CAACI,MAAD,CAAzB;AAEA,OAAO,MAAMI,cAA8B,GAAG,YAAY;AAEzD,MAAIC,KAAe,GAAG,EAAtB;;AAEA,OAAK,MAAMC,CAAX,IAAgBR,cAAhB,EAAiC;AAChC,UAAM;AAAES,MAAAA,IAAI,EAAEC;AAAR,QAAiB,MAAMX,KAAK,CAACY,IAAN,CAC5BC,OAAO,CAACC,GAAR,CAAYC,kBAAZ,GAAiC,oBADL,EAE5B;AACCb,MAAAA,aAAa,EAAEO,CAAC,CAACO;AADlB,KAF4B,CAA7B;AAMAR,IAAAA,KAAK,GAAGA,KAAK,CAACS,MAAN,CAAaN,IAAI,CAACO,OAAL,CAAaC,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQC,GAAR,CAAYC,CAAC,IAAK,IAAGb,CAAC,CAACc,KAAM,IAAGD,CAAC,CAACE,KAAM,EAAxC,CAAlB,CAAb,CAAR;AACA;;AACD,SAAO;AACNhB,IAAAA,KADM;AAENiB,IAAAA,QAAQ,EAAE;AAFJ,GAAP;AAIA,CAjBM;AAmBP,OAAO,MAAMC,cAA2C,GAAG,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAA6D;AACvH,MAAK,CAACA,MAAN,EAAe;AACd,WAAO;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAAP;AAGA;;AAGD,QAAMC,iBAAiB,GAAG5B,cAAc,CAAC6B,IAAf,CAAoBrB,CAAC,IAAIA,CAAC,CAACc,KAAF,IAAWI,MAAM,CAACI,IAA3C,CAA1B;;AACA,MAAK,CAACF,iBAAN,EAA0B;AACzB,WAAO;AACND,MAAAA,QAAQ,EAAE;AADJ,KAAP;AAGA;;AAED,MAAI,CAEH,CAFD,CAEE,OAAMI,KAAN,EAAa,CAEd;AAGD,CAtBM","sourcesContent":["import { GetStaticPaths, GetStaticPathsContext, GetStaticProps, GetStaticPropsContext } from \"next\";\r\nimport React, { useState } from \"react\";\r\nimport { withLayout } from \"../../layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { MenuItem } from \"../../interfaces/menu.inteface\";\r\nimport { TopLevelCategory, TopPageModel } from \"../../interfaces/toppage.interface\";\r\nimport { ParsedUrlQuery } from \"querystring\";\r\nimport { ProductModel } from \"../../interfaces/product.interface\";\r\nimport { firstLevelMenu } from \"../../helpers/helpers\";\r\n\r\nconst firstCategory = 0;\r\n\r\nfunction Course({ page, products }: CourseProps): JSX.Element {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{products && products.length}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default withLayout(Course);\r\n\r\nexport const getStaticPaths: GetStaticPaths = async () => {\r\n\r\n\tlet paths: string[] = [];\r\n\r\n\tfor( const m of firstLevelMenu ) {\r\n\t\tconst { data: menu } = await axios.post<MenuItem[]>(\r\n\t\t\tprocess.env.NEXT_PUBLIC_DOMAIN + \"/api/top-page/find\",\r\n\t\t\t{\r\n\t\t\t\tfirstCategory: m.id\r\n\t\t\t},\r\n\t\t);\r\n\t\tpaths = paths.concat(menu.flatMap(s => s.pages.map(p => `/${m.route}/${p.alias}`)))\r\n\t}\r\n\treturn {\r\n\t\tpaths,\r\n\t\tfallback: true,\r\n\t}\r\n}\r\n\r\nexport const getStaticProps: GetStaticProps<CourseProps> = async ({ params }: GetStaticPropsContext<ParsedUrlQuery>) => {\r\n\tif ( !params ) {\r\n\t\treturn {\r\n\t\t\tnotFound: true\r\n\t\t};\r\n\t}\r\n\r\n\r\n\tconst firstCategoryItem = firstLevelMenu.find(m => m.route == params.type);\r\n\tif ( !firstCategoryItem ) {\r\n\t\treturn {\r\n\t\t\tnotFound: true\r\n\t\t};\r\n\t}\r\n\r\n\ttry {\r\n\r\n\t} catch(error) {\r\n\r\n\t}\r\n\r\n\r\n};\r\n\r\ninterface CourseProps extends Record<string, unknown> {\r\n\tmenu: MenuItem[];\r\n\tfirstCategory: TopLevelCategory;\r\n\tpage: TopPageModel;\r\n\tproducts: ProductModel[];\r\n}\r\n"]},"metadata":{},"sourceType":"module"}