{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport styles from \"./Raiting.module.css\";\nimport cn from \"classnames\";\nimport { useEffect, useState } from \"react\";\nimport StarIcon from \"./star.svg\";\nexport const Raiting = (_ref) => {\n  let {\n    isEditable = false,\n    raiting,\n    setRaiting\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"isEditable\", \"raiting\", \"setRaiting\"]);\n\n  const {\n    0: raitingArray,\n    1: setRaitingArray\n  } = useState(new Array(5).fill( /*#__PURE__*/_jsx(_Fragment, {})));\n  useEffect(() => {\n    constructRaiting(raiting);\n  }, [raiting]);\n\n  const constructRaiting = currentRaiting => {\n    const updatedArray = raitingArray.map((el, index) => {\n      return /*#__PURE__*/_jsx(\"span\", {\n        className: cn(styles.star, {\n          [styles.filled]: index < currentRaiting,\n          [styles.editable]: isEditable\n        }),\n        onMouseEnter: () => changeDisplay(index + 1),\n        onMouseLeave: () => changeDisplay(raiting),\n        onClick: () => onClick(index + 1),\n        children: /*#__PURE__*/_jsx(StarIcon, {\n          tabIndex: isEditable ? 0 : -1,\n          onKeyDown: e => isEditable && handelSpace(index + 1, e)\n        })\n      });\n    });\n    setRaitingArray(updatedArray);\n  };\n\n  const changeDisplay = index => {\n    if (!isEditable) {\n      return;\n    }\n\n    constructRaiting(index);\n  };\n\n  const onClick = index => {\n    if (!isEditable || !setRaiting) {\n      return;\n    }\n\n    setRaiting(index);\n  };\n\n  const handelSpace = (index, e) => {\n    if (e.code != \"Space\" || !setRaiting) {\n      return;\n    }\n\n    setRaiting(index);\n  };\n\n  return /*#__PURE__*/_jsx(\"div\", _objectSpread(_objectSpread({}, props), {}, {\n    children: raitingArray.map((el, index) => {\n      return /*#__PURE__*/_jsx(\"span\", {\n        children: el\n      }, index);\n    })\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}