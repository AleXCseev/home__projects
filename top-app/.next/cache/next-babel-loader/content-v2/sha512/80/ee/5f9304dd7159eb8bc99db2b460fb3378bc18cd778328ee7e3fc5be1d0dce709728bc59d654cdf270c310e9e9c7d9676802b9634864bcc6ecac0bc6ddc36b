{"ast":null,"code":"import { SortEnum } from \"../../components/Sort/Sort.props\";\nexport const sortReducer = (state, action) => {\n  switch (action.type) {\n    case SortEnum.Rating:\n      return {\n        sort: SortEnum.Rating,\n        products: state.products.sort((a, b) => a.initialRating > b.initialRating ? -1 : 1)\n      };\n\n    case SortEnum.Price:\n      return {\n        sort: SortEnum.Price,\n        products: state.products.sort((a, b) => a.price > b.price ? 1 : -1)\n      };\n\n    case \"reset\":\n      return {\n        sort: SortEnum.Rating,\n        products: action.initialState\n      };\n\n    default:\n      throw new Error('Неверный тип сортировки');\n  }\n};","map":{"version":3,"sources":["/Users/konstantinalekseev/Desktop/home__projects/top-app/page-components/TopPageComponent/sort.reducer.ts"],"names":["SortEnum","sortReducer","state","action","type","Rating","sort","products","a","b","initialRating","Price","price","initialState","Error"],"mappings":"AAAA,SAASA,QAAT,QAAyB,kCAAzB;AAUA,OAAO,MAAMC,WAAW,GAAG,CAAEC,KAAF,EAA0BC,MAA1B,KAAqE;AAC5F,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKJ,QAAQ,CAACK,MAAd;AACI,aAAO;AACHC,QAAAA,IAAI,EAAEN,QAAQ,CAACK,MADZ;AAEHE,QAAAA,QAAQ,EAAEL,KAAK,CAACK,QAAN,CAAeD,IAAf,CAAoB,CAACE,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,aAAF,GAAkBD,CAAC,CAACC,aAApB,GAAoC,CAAC,CAArC,GAAyC,CAAvE;AAFP,OAAP;;AAIJ,SAAKV,QAAQ,CAACW,KAAd;AACI,aAAO;AACHL,QAAAA,IAAI,EAAEN,QAAQ,CAACW,KADZ;AAEHJ,QAAAA,QAAQ,EAAEL,KAAK,CAACK,QAAN,CAAeD,IAAf,CAAoB,CAACE,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACI,KAAF,GAAUH,CAAC,CAACG,KAAZ,GAAoB,CAApB,GAAwB,CAAC,CAAvD;AAFP,OAAP;;AAIJ,SAAK,OAAL;AACI,aAAO;AACHN,QAAAA,IAAI,EAAEN,QAAQ,CAACK,MADZ;AAEHE,QAAAA,QAAQ,EAAEJ,MAAM,CAACU;AAFd,OAAP;;AAIJ;AACI,YAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;AAjBR;AAmBH,CApBM","sourcesContent":["import { SortEnum } from \"../../components/Sort/Sort.props\";\nimport { ProductModel } from \"../../interfaces/product.interface\";\n\nexport type SortActions = { type: SortEnum.Price } | { type: SortEnum.Rating } | { type: 'reset', initialState:ProductModel[]}\n\nexport interface SortReducerState {\n    sort: SortEnum;\n    products: ProductModel[];\n}\n\nexport const sortReducer = ( state:SortReducerState, action: SortActions ): SortReducerState => {\n    switch(action.type) {\n        case SortEnum.Rating:\n            return {\n                sort: SortEnum.Rating,\n                products: state.products.sort((a, b) => a.initialRating > b.initialRating ? -1 : 1)\n            };\n        case SortEnum.Price:\n            return {\n                sort: SortEnum.Price,\n                products: state.products.sort((a, b) => a.price > b.price ? 1 : -1)\n            };\n        case \"reset\": \n            return {\n                sort: SortEnum.Rating,\n                products: action.initialState\n            };\n        default:\n            throw new Error('Неверный тип сортировки');\n    }\n}"]},"metadata":{},"sourceType":"module"}