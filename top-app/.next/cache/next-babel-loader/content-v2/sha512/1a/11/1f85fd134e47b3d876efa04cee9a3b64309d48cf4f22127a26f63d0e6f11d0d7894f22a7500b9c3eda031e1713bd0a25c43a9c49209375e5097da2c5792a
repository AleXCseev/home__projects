{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport React from \"react\";\nimport { withLayout } from \"../../layout/Layout\";\n\nfunction Course(_ref) {\n  var page = _ref.page,\n      products = _ref.products;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: products && products.length\n  }, void 0, false);\n}\n\n_c = Course;\nexport var __N_SSG = true;\nexport default _c2 = withLayout(Course);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Course\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/ccccc/Desktop/home__projects/top-app/pages/[type]/[alias].tsx"],"names":["React","withLayout","Course","page","products","length"],"mappings":";;AACA,OAAOA,KAAP,MAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,qBAA3B;;AASA,SAASC,MAAT,OAA8D;AAAA,MAA5CC,IAA4C,QAA5CA,IAA4C;AAAA,MAAtCC,QAAsC,QAAtCA,QAAsC;AAC7D,sBACC;AAAA,cACEA,QAAQ,IAAIA,QAAQ,CAACC;AADvB,mBADD;AAKA;;KANQH,M;;AAQT,qBAAeD,UAAU,CAACC,MAAD,CAAzB","sourcesContent":["import { GetStaticPaths, GetStaticPathsContext, GetStaticProps, GetStaticPropsContext } from \"next\";\r\nimport React, { useState } from \"react\";\r\nimport { withLayout } from \"../../layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { MenuItem } from \"../../interfaces/menu.inteface\";\r\nimport { TopPageModel } from \"../../interfaces/toppage.interface\";\r\nimport { ParsedUrlQuery } from \"querystring\";\r\nimport { ProductModel } from \"../../interfaces/product.interface\";\r\n\r\nconst firstCategory = 0;\r\n\r\nfunction Course({ page, products }: CourseProps): JSX.Element {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{products && products.length}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default withLayout(Course);\r\n\r\nexport const getStaticPaths: GetStaticPaths = async () => {\r\n\tconst { data: menu } = await axios.post<MenuItem[]>(\r\n\t\tprocess.env.NEXT_PUBLIC_DOMAIN + \"/api/top-page/find\",\r\n\t\t{\r\n\t\t\tfirstCategory,\r\n\t\t},\r\n\t);\r\n\r\n\treturn {\r\n\t\tpaths: menu.flatMap(m => m.pages.map(p => '/courses/' + p.alias)),\r\n\t\tfallback: true,\r\n\t}\r\n}\r\n\r\nexport const getStaticProps: GetStaticProps<CourseProps> = async ({ params }: GetStaticPropsContext<ParsedUrlQuery>) => {\r\n\tif ( !params ) {\r\n\t\treturn {\r\n\t\t\tnotFound: true\r\n\t\t};\r\n\t}\r\n\r\n\r\n\tconst firstCategoryItem = firstLevelMenu.find(m)\r\n\tconst { data: menu } = await axios.post<MenuItem[]>(\r\n\t\tprocess.env.NEXT_PUBLIC_DOMAIN + \"/api/top-page/find\",\r\n\t\t{\r\n\t\t\tfirstCategory,\r\n\t\t},\r\n\t);\r\n\t\r\n    const { data: page } = await axios.get<TopPageModel>(process.env.NEXT_PUBLIC_DOMAIN + \"/api/top-page/byAlias/\" + params.alias);\r\n\tconst { data: products } = await axios.post<ProductModel[]>(process.env.NEXT_PUBLIC_DOMAIN + \"/api/product/find\", {\r\n\t\tcategory: page.category,\r\n\t\tlimit: 10,\r\n\t});\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tmenu,\r\n\t\t\tfirstCategory,\r\n\t\t\tpage,\r\n\t\t\tproducts,\r\n\t\t},\r\n\t};\r\n};\r\n\r\ninterface CourseProps extends Record<string, unknown> {\r\n\tmenu: MenuItem[];\r\n\tfirstCategory: number;\r\n\tpage: TopPageModel;\r\n\tproducts: ProductModel[];\r\n}\r\n"]},"metadata":{},"sourceType":"module"}