{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { withLayout } from \"../../layout/Layout\";\n\nfunction Type(_ref) {\n  var firstCategory = _ref.firstCategory;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"Type: \", firstCategory]\n  }, void 0, true);\n}\n\n_c = Type;\nexport var __N_SSG = true;\nexport default _c2 = withLayout(Type);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Type\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/User/Desktop/home__projects/top-app/pages/[type]/index.tsx"],"names":["withLayout","Type","firstCategory"],"mappings":";;AAEA,SAASA,UAAT,QAA2B,qBAA3B;;AAMA,SAASC,IAAT,OAA0D;AAAA,MAAzCC,aAAyC,QAAzCA,aAAyC;AACzD,sBACC;AAAA,yBACSA,aADT;AAAA,kBADD;AAKA;;KANQD,I;;AAQT,qBAAeD,UAAU,CAACC,IAAD,CAAzB","sourcesContent":["import { GetStaticPaths, GetStaticProps, GetStaticPropsContext } from \"next\";\r\nimport axios from \"axios\";\r\nimport { withLayout } from \"../../layout/Layout\";\r\nimport { MenuItem } from \"../../interfaces/menu.inteface\";\r\nimport { firstLevelMenu } from \"../../helpers/helpers\";\r\nimport { ParsedUrlQuery } from \"querystring\";\r\nimport { API } from \"../../helpers/api\";\r\n\r\nfunction Type( { firstCategory }:TypeProps ): JSX.Element {\r\n\treturn (\r\n\t\t<>\r\n\t\t\tType: { firstCategory }\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default withLayout(Type);\r\n\r\nexport const getStaticPaths: GetStaticPaths = async () => {\r\n\treturn {\r\n\t\tpaths: firstLevelMenu.map(m => '/' + m.route),\r\n\t\tfallback: true,\r\n\t}\r\n}\r\n\r\nexport const getStaticProps: GetStaticProps<TypeProps> = async ({ params }: GetStaticPropsContext<ParsedUrlQuery>) => {\r\n\tif(!params) {\r\n        return {\r\n            notFound: true\r\n        }\r\n    }\r\n\r\n    const firstCategoryItem = firstLevelMenu.find(m => m.route == params.type)\r\n    if(!firstCategoryItem) {\r\n        return {\r\n            notFound: true\r\n        }\r\n    }\r\n    \r\n    const { data: menu } = await axios.post<MenuItem[]>(\r\n\t\tAPI.topPage.find,\r\n\t\t{\r\n\t\t\tfirstCategory: firstCategoryItem.id\r\n\t\t},\r\n\t);\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tmenu,\r\n\t\t\tfirstCategory: firstCategoryItem.id\r\n\t\t},\r\n\t};\r\n};\r\n\r\ninterface TypeProps extends Record<string, unknown> {\r\n\tmenu: MenuItem[];\r\n\tfirstCategory: number;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}