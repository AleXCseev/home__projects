{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\home__projects\\\\top-app\\\\components\\\\Textarea\\\\Textarea.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport styles from \"./Textarea.module.css\";\nimport cn from \"classnames\";\nexport const Textarea = (_ref) => {\n  let {\n    className\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"className\"]);\n\n  return /*#__PURE__*/_jsxDEV(\"textarea\", _objectSpread({\n    className: cn(styles.input, className)\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/home__projects/top-app/components/Textarea/Textarea.tsx"],"names":["styles","cn","Textarea","className","props","input"],"mappings":";;;;;;;;;;;;;AACA,OAAOA,MAAP,MAAmB,uBAAnB;AACA,OAAOC,EAAP,MAAe,YAAf;AAEA,OAAO,MAAMC,QAAQ,GAAG,UAAyD;AAAA,MAAxD;AAAEC,IAAAA;AAAF,GAAwD;AAAA,MAAxCC,KAAwC;;AAChF,sBACC;AAAU,IAAA,SAAS,EAAEH,EAAE,CAACD,MAAM,CAACK,KAAR,EAAeF,SAAf;AAAvB,KAAsDC,KAAtD;AAAA;AAAA;AAAA;AAAA,UADD;AAGA,CAJM","sourcesContent":["import { TextareaProps } from \"./Textarea.props\";\r\nimport styles from \"./Textarea.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nexport const Textarea = ({ className, ...props }: TextareaProps): JSX.Element => {\r\n\treturn (\r\n\t\t<textarea className={cn(styles.input, className)} {...props}/>\r\n\t);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}