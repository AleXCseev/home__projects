{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport styles from \"./Header.module.css\";\nimport cn from \"classnames\";\nimport Logo from \"../logo.svg\";\nimport React, { useEffect, useState } from \"react\";\nimport { ButtonIcon } from \"../../components\";\nimport { motion, useReducedMotion } from \"framer-motion\";\nimport { Sidebar } from \"../Sidebar/Sidebar\";\nimport { useRouter } from \"next/router\";\nexport const Header = (_ref) => {\n  let {\n    className\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"className\"]);\n\n  const {\n    0: isOpened,\n    1: setIsOpened\n  } = useState(false);\n  const router = useRouter();\n  const shouldReducedMotion = useReducedMotion();\n  useEffect(() => {\n    setIsOpened(false);\n  }, [router]);\n  const variants = {\n    opened: {\n      opacity: 1,\n      x: 0,\n      transition: {\n        stiffness: 20\n      }\n    },\n    closed: {\n      opacity: shouldReducedMotion ? 1 : 0,\n      x: \"100%\"\n    }\n  };\n  return /*#__PURE__*/_jsxs(\"header\", _objectSpread(_objectSpread({\n    className: cn(className, styles.header)\n  }, props), {}, {\n    children: [/*#__PURE__*/_jsx(Logo, {}), /*#__PURE__*/_jsx(ButtonIcon, {\n      appearance: \"white\",\n      icon: \"menu\",\n      onClick: () => setIsOpened(true)\n    }), /*#__PURE__*/_jsxs(motion.div, {\n      className: styles.mobileMenu,\n      variants: variants,\n      initial: \"closed\",\n      animate: isOpened ? \"opened\" : \"closed\",\n      children: [/*#__PURE__*/_jsx(Sidebar, {}), /*#__PURE__*/_jsx(ButtonIcon, {\n        className: styles.menuClose,\n        appearance: \"white\",\n        icon: \"close\",\n        onClick: () => setIsOpened(false)\n      })]\n    })]\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}