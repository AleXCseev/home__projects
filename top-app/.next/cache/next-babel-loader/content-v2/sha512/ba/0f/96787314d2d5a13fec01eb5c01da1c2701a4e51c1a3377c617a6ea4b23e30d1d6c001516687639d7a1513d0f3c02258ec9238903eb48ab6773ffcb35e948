{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ccccc\\\\Desktop\\\\home__projects\\\\top-app\\\\layout\\\\Menu\\\\Menu.tsx\";\nimport React, { useContext } from \"react\";\nimport { AppContext } from \"../../context/app.context\";\nimport CoursesIcon from \"./icons/courses.svg\";\nimport ServicesIcon from \"./icons/services.svg\";\nimport BooksIcon from \"./icons/books.svg\";\nimport ProductsIcon from \"./icons/products.svg\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport styles from \"./Menu.module.css\";\nimport { TopLevelCategory } from \"../../interfaces/toppage.interface\";\nimport cn from \"classnames\";\nconst firstLevelMenu = [{\n  route: \"courses\",\n  name: \"Курсы\",\n  icon: /*#__PURE__*/_jsxDEV(CoursesIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 46\n  }, this),\n  id: TopLevelCategory.Courses\n}, {\n  route: \"services\",\n  name: \"Сервисы\",\n  icon: /*#__PURE__*/_jsxDEV(ServicesIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 49\n  }, this),\n  id: TopLevelCategory.Services\n}, {\n  route: \"books\",\n  name: \"Книги\",\n  icon: /*#__PURE__*/_jsxDEV(BooksIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 44\n  }, this),\n  id: TopLevelCategory.Books\n}, {\n  route: \"products\",\n  name: \"Продукты\",\n  icon: /*#__PURE__*/_jsxDEV(ProductsIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 50\n  }, this),\n  id: TopLevelCategory.Products\n}];\nexport const Menu = () => {\n  const {\n    menu,\n    setMenu,\n    firstCategory\n  } = useContext(AppContext);\n  const router = useRouter();\n\n  const openSecondLevel = secondCategory => {\n    setMenu(menu.map(m => {\n      if (m._id.secondCategory == secondCategory) {}\n    }));\n  };\n\n  const buildFirstLevel = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: firstLevelMenu.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          href: `/${m.route}`,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: cn(styles.firstLevel, {\n                [styles.firstLevelActive]: m.id == firstCategory\n              }),\n              children: [m.icon, /*#__PURE__*/_jsxDEV(\"span\", {\n                children: m.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), m.id == firstCategory && buildSecondLevel(m)]\n      }, m.route, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this))\n    }, void 0, false);\n  };\n\n  const buildSecondLevel = menuItem => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.secondBlock,\n      children: menu.map(m => {\n        if (m.pages.map(p => p.alias).includes(router.asPath.split('/')[2])) {\n          m.isOpened = true;\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.secondLevel,\n            children: m._id.secondCategory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: cn(styles.secondLevelBlock, {\n              [styles.secondLevelBlockOpened]: m.isOpened\n            }),\n            children: buildThirdLevel(m.pages, menuItem.route)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this)]\n        }, m._id.secondCategory, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  };\n\n  const buildThirdLevel = (pages, route) => {\n    return pages.map(p => /*#__PURE__*/_jsxDEV(Link, {\n      href: `/${route}/${p.alias}`,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: cn(styles.thirdLevel, {\n          [styles.thirdLevelActive]: `/${route}/${p.alias}` == router.asPath\n        }),\n        children: p.category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.menu,\n    children: buildFirstLevel()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/ccccc/Desktop/home__projects/top-app/layout/Menu/Menu.tsx"],"names":["React","useContext","AppContext","CoursesIcon","ServicesIcon","BooksIcon","ProductsIcon","Link","useRouter","styles","TopLevelCategory","cn","firstLevelMenu","route","name","icon","id","Courses","Services","Books","Products","Menu","menu","setMenu","firstCategory","router","openSecondLevel","secondCategory","map","m","_id","buildFirstLevel","firstLevel","firstLevelActive","buildSecondLevel","menuItem","secondBlock","pages","p","alias","includes","asPath","split","isOpened","secondLevel","secondLevelBlock","secondLevelBlockOpened","buildThirdLevel","thirdLevel","thirdLevelActive","category"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\"\r\nimport { AppContext } from \"../../context/app.context\"\r\nimport { FirstLevelMenuItem, PageItem } from \"../../interfaces/menu.inteface\"\r\nimport CoursesIcon from \"./icons/courses.svg\"\r\nimport ServicesIcon from \"./icons/services.svg\"\r\nimport BooksIcon from \"./icons/books.svg\"\r\nimport ProductsIcon from \"./icons/products.svg\"\r\nimport Link from \"next/link\";\r\nimport { useRouter } from \"next/router\";\r\nimport styles from \"./Menu.module.css\"\r\nimport { TopLevelCategory } from \"../../interfaces/toppage.interface\"\r\nimport cn from \"classnames\"\r\n\r\nconst firstLevelMenu: FirstLevelMenuItem[] = [\r\n    { route: \"courses\", name: \"Курсы\", icon: <CoursesIcon></CoursesIcon>, id: TopLevelCategory.Courses },\r\n    { route: \"services\", name: \"Сервисы\", icon: <ServicesIcon></ServicesIcon>, id: TopLevelCategory.Services },\r\n    { route: \"books\", name: \"Книги\", icon: <BooksIcon></BooksIcon>, id: TopLevelCategory.Books },\r\n    { route: \"products\", name: \"Продукты\", icon: <ProductsIcon></ProductsIcon>, id: TopLevelCategory.Products }\r\n];\r\n\r\nexport const Menu = (): JSX.Element => {\r\n\r\n    const { menu, setMenu, firstCategory } = useContext(AppContext)\r\n    const router = useRouter()\r\n\r\n    const openSecondLevel = ( secondCategory:string ) => {\r\n        setMenu(menu.map(m => {\r\n            if(m._id.secondCategory == secondCategory) {\r\n                \r\n            }\r\n        }))\r\n    }\r\n\r\n    const buildFirstLevel = () => {\r\n        return (\r\n            <>\r\n                { firstLevelMenu.map( m => (\r\n                    <div key={m.route}>\r\n                        <Link href={`/${m.route}`}>\r\n                            <a>\r\n                                <div className={cn(\r\n                                    styles.firstLevel, {\r\n                                        [styles.firstLevelActive]: m.id == firstCategory\r\n                                    }\r\n                                )}>\r\n                                    { m.icon }\r\n                                    <span>{ m.name }</span>\r\n                                </div>\r\n                            </a>\r\n                        </Link>\r\n                        {m.id == firstCategory && buildSecondLevel(m)}\r\n                    </div>\r\n                ))}\r\n            </>\r\n        )\r\n    }\r\n\r\n    const buildSecondLevel = (menuItem: FirstLevelMenuItem) => {\r\n        return (\r\n            <div className={styles.secondBlock}>\r\n                { menu.map( m => {\r\n\r\n                    if(m.pages.map(p => p.alias).includes( router.asPath.split('/')[2] )) {\r\n                        m.isOpened = true\r\n                    }\r\n\r\n                    return(\r\n                        <div key={m._id.secondCategory}>\r\n                            <div className={styles.secondLevel}>{ m._id.secondCategory }</div>\r\n                            <div className={cn(styles.secondLevelBlock, {\r\n                                [ styles.secondLevelBlockOpened ]: m.isOpened\r\n                            })}>\r\n                                { buildThirdLevel(m.pages, menuItem.route) }\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const buildThirdLevel = ( pages: PageItem[], route: string ) => {\r\n        return (\r\n            pages.map( p => (\r\n                <Link href={`/${route}/${p.alias}`}>\r\n                    <a className={cn(styles.thirdLevel, {\r\n                        [styles.thirdLevelActive]: `/${route}/${p.alias}` == router.asPath\r\n                    })}>\r\n                        { p.category }\r\n                    </a>\r\n                </Link>\r\n           ))\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={styles.menu}>\r\n            {buildFirstLevel()}\r\n        </div>\r\n        \r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}